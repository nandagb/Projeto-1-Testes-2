/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 15 02:16:47 GMT 2024
 */

package com.example;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.example.Banco;
import com.example.Conta;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Banco_ESTest extends Banco_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Long long0 = Long.getLong("");
      LinkedList<Conta> linkedList0 = new LinkedList<Conta>();
      Banco banco0 = new Banco((Long) null, "", linkedList0);
      Conta conta0 = new Conta(long0);
      Conta conta1 = new Conta();
      Double double0 = new Double((-372.40804));
      Boolean boolean0 = banco0.transferencia(conta0, conta1, double0);
      assertEquals((-372.40804), conta1.getSaldo(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Banco banco0 = new Banco("4on%MJ1fc");
      Conta conta0 = new Conta();
      Long long0 = new Long((-470L));
      Conta conta1 = new Conta(long0);
      // Undeclared exception!
      try { 
        banco0.transferencia(conta0, conta1, (Double) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.example.Banco", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Banco banco0 = new Banco();
      Long long0 = new Long(1186L);
      LinkedList<Conta> linkedList0 = new LinkedList<Conta>();
      banco0.setContas(linkedList0);
      banco0.addContaById(long0);
      assertNull(banco0.getId());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Banco banco0 = new Banco();
      String string0 = banco0.getNome();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Long long0 = new Long(585L);
      LinkedList<Conta> linkedList0 = new LinkedList<Conta>();
      Banco banco0 = new Banco(long0, "Banco(id=585, nome=, contas=[])", linkedList0);
      String string0 = banco0.getNome();
      assertEquals("Banco(id=585, nome=, contas=[])", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Banco banco0 = new Banco("");
      Long long0 = banco0.getId();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Long long0 = new Long(0L);
      LinkedList<Conta> linkedList0 = new LinkedList<Conta>();
      Banco banco0 = new Banco(long0, "'-|W\"'seq", linkedList0);
      Long long1 = banco0.getId();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Long long0 = new Long((-2929L));
      LinkedList<Conta> linkedList0 = new LinkedList<Conta>();
      Banco banco0 = new Banco(long0, "-", linkedList0);
      Long long1 = banco0.getId();
      assertEquals((-2929L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Banco banco0 = new Banco();
      List<Conta> list0 = banco0.getContas();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Banco banco0 = new Banco("");
      boolean boolean0 = banco0.canEqual(banco0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Banco banco0 = new Banco();
      Object object0 = new Object();
      boolean boolean0 = banco0.canEqual(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Banco banco0 = new Banco();
      Long long0 = new Long((-1956L));
      Double double0 = new Double(516L);
      Conta conta0 = new Conta(long0, ")!\"", banco0, double0, (-3403), 'Q');
      // Undeclared exception!
      try { 
        banco0.addConta(conta0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.example.Banco", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Long long0 = new Long(585L);
      LinkedList<Conta> linkedList0 = new LinkedList<Conta>();
      Banco banco0 = new Banco(long0, "", linkedList0);
      String string0 = banco0.getNome();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Long long0 = new Long(585L);
      LinkedList<Conta> linkedList0 = new LinkedList<Conta>();
      Banco banco0 = new Banco(long0, "", linkedList0);
      Long long1 = banco0.getId();
      assertEquals(585L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Banco banco0 = new Banco(", nome=");
      Conta conta0 = new Conta();
      Double double0 = new Double(1.0);
      Boolean boolean0 = banco0.transferencia(conta0, conta0, double0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Long long0 = new Long(4530L);
      Banco banco0 = new Banco(long0, "b~V$0P`y}Z]<", (List<Conta>) null);
      LinkedList<Conta> linkedList0 = new LinkedList<Conta>();
      banco0.setContas(linkedList0);
      Banco banco1 = new Banco(long0, "b~V$0P`y}Z]<", linkedList0);
      boolean boolean0 = banco0.equals(banco1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Long long0 = new Long(4530L);
      Banco banco0 = new Banco(long0, "b~V$0P`y}Z]<", (List<Conta>) null);
      LinkedList<Conta> linkedList0 = new LinkedList<Conta>();
      Banco banco1 = new Banco(long0, "b~V$0P`y}Z]<", linkedList0);
      boolean boolean0 = banco0.equals(banco1);
      assertFalse(boolean0);
      assertFalse(banco1.equals((Object)banco0));
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Banco banco0 = new Banco();
      Banco banco1 = new Banco();
      boolean boolean0 = banco0.equals(banco1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Long long0 = new Long(4530L);
      Banco banco0 = new Banco();
      Banco banco1 = new Banco(long0, "b~V$0P`y}Z]<", (List<Conta>) null);
      boolean boolean0 = banco1.equals(banco0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Banco banco0 = new Banco(", nome=");
      List<Conta> list0 = banco0.getContas();
      Long long0 = new Long(0L);
      banco0.setId(long0);
      Banco banco1 = new Banco(long0, "=`JE*iqBujUsE:", list0);
      boolean boolean0 = banco0.equals(banco1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Banco banco0 = new Banco(", nome=");
      Integer integer0 = new Integer('.');
      boolean boolean0 = banco0.equals(integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Banco banco0 = new Banco("1,=>cN$W");
      boolean boolean0 = banco0.equals(banco0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Banco banco0 = new Banco();
      banco0.hashCode();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Banco banco0 = new Banco("1,=>cN$W");
      Long long0 = new Long((-1391L));
      banco0.setId(long0);
      banco0.hashCode();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Banco banco0 = new Banco();
      Long long0 = new Long(1186L);
      // Undeclared exception!
      try { 
        banco0.addContaById(long0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.example.Banco", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Banco banco0 = new Banco(", nome=");
      banco0.setNome("com.example.Banco");
      assertNull(banco0.getId());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Banco banco0 = new Banco(", nome=");
      String string0 = banco0.toString();
      assertEquals("Banco(id=null, nome=, nome=, contas=[])", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Banco banco0 = new Banco();
      LinkedList<Conta> linkedList0 = new LinkedList<Conta>();
      banco0.setContas(linkedList0);
      Banco banco1 = new Banco();
      boolean boolean0 = banco0.equals(banco1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Banco banco0 = new Banco();
      Banco banco1 = new Banco("");
      boolean boolean0 = banco0.equals(banco1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Banco banco0 = new Banco(", nome=");
      Conta conta0 = new Conta();
      banco0.addConta(conta0);
      List<Conta> list0 = banco0.getContas();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Banco banco0 = new Banco("");
      Long long0 = new Long(1946L);
      List<Conta> list0 = banco0.getContas();
      Banco banco1 = new Banco(long0, "Mri", list0);
      boolean boolean0 = banco0.equals(banco1);
      assertFalse(boolean0);
  }
}
