/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 15 02:08:09 GMT 2024
 */

package com.example;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.example.Banco;
import com.example.Conta;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Banco_ESTest extends Banco_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Banco banco0 = new Banco();
      Conta conta0 = new Conta();
      Long long0 = new Long((-376L));
      Conta conta1 = new Conta(long0);
      Double double0 = new Double((-2479.368));
      Boolean boolean0 = banco0.transferencia(conta0, conta1, double0);
      assertEquals((-2479.368), conta0.getSaldo(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Banco banco0 = new Banco("[8;*E");
      String string0 = banco0.getNome();
      assertEquals("[8;*E", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Banco banco0 = new Banco("");
      String string0 = banco0.getNome();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Banco banco0 = new Banco("/*R%G$");
      Long long0 = new Long(0L);
      banco0.setId(long0);
      Long long1 = banco0.getId();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Long long0 = new Long((-1514L));
      LinkedList<Conta> linkedList0 = new LinkedList<Conta>();
      Banco banco0 = new Banco(long0, "~;..''Ha&[", linkedList0);
      Long long1 = banco0.getId();
      assertEquals((-1514L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Long long0 = new Long(2277L);
      LinkedList<Conta> linkedList0 = new LinkedList<Conta>();
      Banco banco0 = new Banco(long0, (String) null, linkedList0);
      Long long1 = banco0.getId();
      assertEquals(2277L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Banco banco0 = new Banco();
      List<Conta> list0 = banco0.getContas();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Banco banco0 = new Banco("gF'%*,3+uBe1 ");
      boolean boolean0 = banco0.canEqual(banco0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Banco banco0 = new Banco("");
      Double double0 = new Double(0.0);
      // Undeclared exception!
      try { 
        banco0.transferencia((Conta) null, (Conta) null, double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.example.Banco", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Banco banco0 = new Banco();
      Long long0 = new Long(3076L);
      // Undeclared exception!
      try { 
        banco0.addContaById(long0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.example.Banco", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Banco banco0 = new Banco();
      Long long0 = new Long(3053L);
      Conta conta0 = new Conta(long0);
      // Undeclared exception!
      try { 
        banco0.addConta(conta0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.example.Banco", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Long long0 = new Long(2277L);
      LinkedList<Conta> linkedList0 = new LinkedList<Conta>();
      Banco banco0 = new Banco(long0, (String) null, linkedList0);
      String string0 = banco0.getNome();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Banco banco0 = new Banco("/*R%G$");
      Long long0 = banco0.getId();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Banco banco0 = new Banco();
      Conta conta0 = new Conta((Long) null);
      Double double0 = new Double(732.752027805);
      Boolean boolean0 = banco0.transferencia(conta0, conta0, double0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Banco banco0 = new Banco();
      Banco banco1 = new Banco();
      boolean boolean0 = banco0.equals(banco1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Banco banco0 = new Banco("gF'%*,3+uBe1 ");
      Banco banco1 = new Banco("gF'%*,3+uBe1 ");
      boolean boolean0 = banco0.equals(banco1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Banco banco0 = new Banco();
      Banco banco1 = new Banco(", beneficiario=");
      boolean boolean0 = banco0.equals(banco1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Banco banco0 = new Banco((String) null);
      Banco banco1 = new Banco();
      boolean boolean0 = banco0.equals(banco1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Banco banco0 = new Banco("");
      Long long0 = new Long(0L);
      banco0.setId(long0);
      Banco banco1 = new Banco(", saldo=");
      boolean boolean0 = banco0.equals(banco1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Banco banco0 = new Banco("");
      Long long0 = new Long(1202L);
      Banco banco1 = new Banco(", saldo=");
      banco1.setId(long0);
      boolean boolean0 = banco0.equals(banco1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Banco banco0 = new Banco();
      boolean boolean0 = banco0.equals("\"#(O[@w%Jzz{");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Banco banco0 = new Banco();
      boolean boolean0 = banco0.equals(banco0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Banco banco0 = new Banco("gF'%*,3+uBe1 ");
      banco0.hashCode();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Banco banco0 = new Banco("X");
      Long long0 = new Long(439L);
      banco0.setId(long0);
      banco0.hashCode();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Banco banco0 = new Banco("\"Ks6");
      banco0.addContaById((Long) null);
      assertNull(banco0.getId());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Banco banco0 = new Banco("\"Ks6");
      Long long0 = new Long((-1323L));
      banco0.setId(long0);
      List<Conta> list0 = banco0.getContas();
      Banco banco1 = new Banco(long0, "", list0);
      boolean boolean0 = banco0.equals(banco1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Banco banco0 = new Banco("\"Ks6");
      banco0.setNome("\"Ks6");
      assertNull(banco0.getId());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Banco banco0 = new Banco("");
      String string0 = banco0.toString();
      assertEquals("Banco(id=null, nome=, contas=[])", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Banco banco0 = new Banco("gF'%*,3+uBe1 ");
      LinkedList<Conta> linkedList0 = new LinkedList<Conta>();
      banco0.setContas(linkedList0);
      assertEquals(0, linkedList0.size());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Banco banco0 = new Banco();
      banco0.hashCode();
  }
}
