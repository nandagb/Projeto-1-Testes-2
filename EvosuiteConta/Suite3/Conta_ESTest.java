/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 15 02:36:03 GMT 2024
 */

package com.example;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.example.Banco;
import com.example.Conta;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Conta_ESTest extends Conta_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Conta conta0 = new Conta((Long) null);
      Boolean boolean0 = conta0.debitar(0.0);
      assertEquals(0.0, conta0.getSaldo(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Long long0 = new Long((-4772L));
      Conta conta0 = new Conta(long0);
      LinkedList<Conta> linkedList0 = new LinkedList<Conta>();
      Banco banco0 = new Banco(long0, "GcsO!9qi", linkedList0);
      Double double0 = new Double((-4772L));
      Conta conta1 = new Conta(long0, "?|F(]=*uTe", banco0, double0, 43, '-');
      boolean boolean0 = conta0.equals(conta1);
      assertFalse(boolean0);
      assertEquals(0.0, conta0.getSaldo(), 0.01);
      assertEquals('-', conta1.getDigitoVerificador());
      assertEquals(43, conta1.getNumeroConta());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Conta conta0 = new Conta();
      boolean boolean0 = conta0.equals(conta0);
      assertEquals(0.0, conta0.getSaldo(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Long long0 = Long.valueOf(0L);
      Banco banco0 = new Banco("{@.V]/x6j=oC)^");
      Conta conta0 = new Conta(long0, "{@.V]/x6j=oC)^", banco0, (Double) null, 3282, 'D');
      conta0.getSaldo();
      assertEquals('D', conta0.getDigitoVerificador());
      assertEquals(3282, conta0.getNumeroConta());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Conta conta0 = new Conta((Long) null);
      conta0.setSaldo(1784.89);
      conta0.getSaldo();
      assertEquals(1784.89, conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Long long0 = new Long((-1695L));
      LinkedList<Conta> linkedList0 = new LinkedList<Conta>();
      Banco banco0 = new Banco(long0, (String) null, linkedList0);
      Double double0 = new Double((-587.6));
      Conta conta0 = new Conta(long0, "", banco0, double0, 10, '.');
      conta0.creditar((-1695L));
      conta0.getSaldo();
      assertEquals((-2282.6), conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Conta conta0 = new Conta();
      int int0 = conta0.getNumeroConta();
      assertEquals(0.0, conta0.getSaldo(), 0.01);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Long long0 = new Long(929L);
      Conta conta0 = new Conta(long0);
      conta0.setNumeroConta((-3555));
      int int0 = conta0.getNumeroConta();
      assertEquals((-3555), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Long long0 = new Long(0L);
      Conta conta0 = new Conta(long0);
      conta0.getId();
      assertEquals(0.0, conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Conta conta0 = new Conta();
      Long long0 = new Long(3372L);
      conta0.setId(long0);
      conta0.getId();
      assertEquals(0.0, conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Conta conta0 = new Conta();
      Long long0 = new Long((-1));
      conta0.setId(long0);
      conta0.getId();
      assertEquals(0.0, conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Conta conta0 = new Conta();
      conta0.setDigitoVerificador('4');
      char char0 = conta0.getDigitoVerificador();
      assertEquals('4', char0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Conta conta0 = new Conta();
      conta0.setDigitoVerificador('c');
      char char0 = conta0.getDigitoVerificador();
      assertEquals('c', char0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Long long0 = new Long(4063L);
      Conta conta0 = new Conta(long0);
      conta0.setBeneficiario("6Kr)#*BqhrzomJ<");
      conta0.getBeneficiario();
      assertEquals(0.0, conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Conta conta0 = new Conta();
      conta0.setBeneficiario("");
      conta0.getBeneficiario();
      assertEquals(0.0, conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Long long0 = Long.valueOf(0L);
      Conta conta0 = new Conta(long0);
      Banco banco0 = new Banco();
      conta0.setBanco(banco0);
      conta0.getBanco();
      assertEquals(0.0, conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Conta conta0 = new Conta();
      conta0.canEqual(conta0);
      assertEquals(0.0, conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Conta conta0 = new Conta();
      Integer integer0 = new Integer(881);
      conta0.canEqual(integer0);
      assertEquals(0.0, conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Conta conta0 = new Conta();
      char char0 = conta0.calculaDigitoVerificador((-1));
      assertEquals(0.0, conta0.getSaldo(), 0.01);
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Long long0 = Long.valueOf(0L);
      Banco banco0 = new Banco("{@.V]/x6j=oC)^");
      Conta conta0 = new Conta(long0, "{@.V]/x6j=oC)^", banco0, (Double) null, 3282, 'D');
      // Undeclared exception!
      try { 
        conta0.debitar(3282);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.example.Conta", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Long long0 = new Long((-731L));
      Banco banco0 = new Banco("");
      Conta conta0 = new Conta(long0, ":", banco0, (Double) null, 1285, '9');
      // Undeclared exception!
      try { 
        conta0.creditar(1285);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.example.Conta", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Long long0 = new Long(0L);
      Banco banco0 = new Banco();
      Double double0 = new Double(1325.5174828208571);
      Conta conta0 = new Conta(long0, (String) null, banco0, double0, (-2144726573), 'L');
      // Undeclared exception!
      try { 
        conta0.calculaDigitoVerificador((-2144726573));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("com.example.Conta", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Conta conta0 = new Conta();
      Double double0 = conta0.getSaldo();
      assertEquals(0.0, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Conta conta0 = new Conta();
      conta0.getBeneficiario();
      assertEquals(0.0, conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Conta conta0 = new Conta();
      conta0.getId();
      assertEquals(0.0, conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Conta conta0 = new Conta();
      conta0.getDigitoVerificador();
      assertEquals(0.0, conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Long long0 = new Long((-1695L));
      LinkedList<Conta> linkedList0 = new LinkedList<Conta>();
      Banco banco0 = new Banco(long0, (String) null, linkedList0);
      Double double0 = new Double((-587.6));
      Conta conta0 = new Conta(long0, "", banco0, double0, 10, '.');
      int int0 = conta0.getNumeroConta();
      assertEquals(10, int0);
      assertEquals('.', conta0.getDigitoVerificador());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Conta conta0 = new Conta();
      char char0 = conta0.calculaDigitoVerificador(4684);
      assertEquals('X', char0);
      assertEquals(0.0, conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Conta conta0 = new Conta();
      char char0 = conta0.calculaDigitoVerificador(43);
      assertEquals('7', char0);
      assertEquals(0.0, conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Conta conta0 = new Conta();
      Boolean boolean0 = conta0.debitar(2756.3180644160666);
      assertFalse(boolean0);
      assertEquals(0.0, conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Conta conta0 = new Conta();
      conta0.debitar((-1421.675));
      assertEquals((-1421.675), conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Long long0 = new Long((-1695L));
      LinkedList<Conta> linkedList0 = new LinkedList<Conta>();
      Banco banco0 = new Banco(long0, (String) null, linkedList0);
      Double double0 = new Double((-587.6));
      Conta conta0 = new Conta(long0, "", banco0, double0, 1317, '.');
      Banco banco1 = new Banco("?azknO]");
      Conta conta1 = new Conta(long0, "?azknO]", banco1, double0, 1317, '.');
      conta1.setBeneficiario("");
      boolean boolean0 = conta0.equals(conta1);
      assertEquals(1317, conta1.getNumeroConta());
      assertFalse(boolean0);
      assertEquals('.', conta1.getDigitoVerificador());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Conta conta0 = new Conta();
      Conta conta1 = new Conta();
      assertTrue(conta1.equals((Object)conta0));
      
      Banco banco0 = new Banco();
      conta1.setBanco(banco0);
      boolean boolean0 = conta0.equals(conta1);
      assertFalse(conta1.equals((Object)conta0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Long long0 = new Long((-1695L));
      LinkedList<Conta> linkedList0 = new LinkedList<Conta>();
      Banco banco0 = new Banco(long0, (String) null, linkedList0);
      Double double0 = new Double((-587.6));
      Conta conta0 = new Conta(long0, "", banco0, double0, 1317, '.');
      Conta conta1 = new Conta(long0, "?azknO]", banco0, double0, 1317, '.');
      assertFalse(conta1.equals((Object)conta0));
      
      conta1.setBeneficiario("");
      boolean boolean0 = conta0.equals(conta1);
      assertTrue(conta1.equals((Object)conta0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Long long0 = new Long((-1695L));
      LinkedList<Conta> linkedList0 = new LinkedList<Conta>();
      Banco banco0 = new Banco(long0, (String) null, linkedList0);
      Double double0 = new Double((-587.6));
      Conta conta0 = new Conta(long0, "", banco0, double0, 1317, '.');
      conta0.creditar((-1695L));
      Conta conta1 = new Conta(long0, "_a?azknO]", banco0, double0, 1317, '.');
      boolean boolean0 = conta0.equals(conta1);
      assertEquals((-2282.6), conta0.getSaldo(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Long long0 = new Long(0L);
      Banco banco0 = new Banco("g:");
      Conta conta0 = new Conta(long0, "", banco0, (Double) null, 59, '#');
      Conta conta1 = new Conta(long0, "g:", banco0, (Double) null, 59, '#');
      boolean boolean0 = conta0.equals(conta1);
      assertFalse(boolean0);
      assertEquals('#', conta1.getDigitoVerificador());
      assertEquals(59, conta1.getNumeroConta());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Long long0 = new Long(1227L);
      Conta conta0 = new Conta(long0);
      Long long1 = new Long(0L);
      conta0.setId(long1);
      Conta conta1 = new Conta(long0);
      boolean boolean0 = conta0.equals(conta1);
      assertEquals(0.0, conta1.getSaldo(), 0.01);
      assertFalse(boolean0);
      assertEquals(0, conta1.getNumeroConta());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Conta conta0 = new Conta();
      Long long0 = new Long(996L);
      Conta conta1 = new Conta(long0);
      boolean boolean0 = conta0.equals(conta1);
      assertEquals(0.0, conta1.getSaldo(), 0.01);
      assertEquals(0, conta1.getNumeroConta());
      assertEquals(0.0, conta0.getSaldo(), 0.01);
      assertFalse(conta1.equals((Object)conta0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Conta conta0 = new Conta();
      Conta conta1 = new Conta();
      boolean boolean0 = conta0.equals(conta1);
      assertEquals(0, conta1.getNumeroConta());
      assertTrue(boolean0);
      assertEquals(0.0, conta1.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Conta conta0 = new Conta();
      conta0.setDigitoVerificador('/');
      Conta conta1 = new Conta();
      boolean boolean0 = conta0.equals(conta1);
      assertEquals('/', conta0.getDigitoVerificador());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Conta conta0 = new Conta();
      Banco banco0 = conta0.getBanco();
      Long long0 = new Long(996L);
      Double double0 = new Double(0.0);
      Conta conta1 = new Conta(long0, "", banco0, double0, (-308), '\\');
      boolean boolean0 = conta0.equals(conta1);
      assertEquals('\\', conta1.getDigitoVerificador());
      assertEquals(0.0, conta0.getSaldo(), 0.01);
      assertFalse(boolean0);
      assertEquals((-308), conta1.getNumeroConta());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Conta conta0 = new Conta();
      boolean boolean0 = conta0.equals((Object) null);
      assertEquals(0.0, conta0.getSaldo(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Conta conta0 = new Conta();
      conta0.hashCode();
      assertEquals(0.0, conta0.getSaldo(), 0.01);
      assertEquals(0, conta0.getNumeroConta());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Long long0 = new Long(27L);
      Banco banco0 = new Banco("");
      Double double0 = new Double(27L);
      Conta conta0 = new Conta(long0, "", banco0, double0, 0, '|');
      conta0.hashCode();
      assertEquals('|', conta0.getDigitoVerificador());
      assertEquals(0, conta0.getNumeroConta());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Long long0 = new Long(1227L);
      Conta conta0 = new Conta(long0);
      String string0 = conta0.toString();
      assertEquals("Conta(id=1227, beneficiario=null, banco=null, saldo=0.0, numeroConta=0, digitoVerificador=\u0000)", string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Long long0 = new Long(1227L);
      Conta conta0 = new Conta(long0);
      Conta conta1 = new Conta(long0);
      boolean boolean0 = conta0.equals(conta1);
      assertEquals(0.0, conta1.getSaldo(), 0.01);
      assertTrue(boolean0);
      assertEquals(0, conta1.getNumeroConta());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Banco banco0 = new Banco();
      Conta conta0 = new Conta((Long) null, ", nome=", banco0, (Double) null, 2146900202, 'm');
      conta0.hashCode();
      assertEquals('m', conta0.getDigitoVerificador());
      assertEquals(2146900202, conta0.getNumeroConta());
  }
}
