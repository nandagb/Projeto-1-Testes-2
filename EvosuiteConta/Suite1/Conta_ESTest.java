/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 15 02:28:21 GMT 2024
 */

package com.example;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.example.Banco;
import com.example.Conta;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Conta_ESTest extends Conta_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Conta conta0 = new Conta((Long) null);
      conta0.debitar((-3541.6203));
      assertEquals((-3541.6203), conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Long long0 = new Long(0L);
      Conta conta0 = new Conta(long0);
      Conta conta1 = new Conta(long0);
      conta1.setDigitoVerificador('6');
      boolean boolean0 = conta0.equals(conta1);
      assertEquals('6', conta1.getDigitoVerificador());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Conta conta0 = new Conta();
      conta0.setNumeroConta(2925);
      Conta conta1 = new Conta();
      boolean boolean0 = conta0.equals(conta1);
      assertEquals(2925, conta0.getNumeroConta());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Conta conta0 = new Conta();
      boolean boolean0 = conta0.equals(conta0);
      assertTrue(boolean0);
      assertEquals(0.0, conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Conta conta0 = new Conta();
      conta0.setSaldo(2747.531151);
      conta0.creditar(2747.531151);
      conta0.getSaldo();
      assertEquals(5495.062302, conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Conta conta0 = new Conta();
      conta0.creditar((-1627.031138592));
      conta0.getSaldo();
      assertEquals((-1627.031138592), conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Long long0 = new Long((-1260L));
      LinkedList<Conta> linkedList0 = new LinkedList<Conta>();
      Banco banco0 = new Banco(long0, (String) null, linkedList0);
      Conta conta0 = new Conta(long0, "", banco0, (Double) null, 5, 'q');
      int int0 = conta0.getNumeroConta();
      assertEquals('q', conta0.getDigitoVerificador());
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Banco banco0 = new Banco();
      Double double0 = new Double((-1.0));
      Conta conta0 = new Conta((Long) null, "{f", banco0, double0, (-1), 'R');
      int int0 = conta0.getNumeroConta();
      assertEquals((-1), int0);
      assertEquals('R', conta0.getDigitoVerificador());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Conta conta0 = new Conta((Long) null);
      conta0.getId();
      assertEquals(0.0, conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Long long0 = new Long(837L);
      Banco banco0 = new Banco("");
      Double double0 = new Double(1156.4500346606);
      Conta conta0 = new Conta(long0, "", banco0, double0, (-1382), ' ');
      conta0.getId();
      assertEquals((-1382), conta0.getNumeroConta());
      assertEquals(' ', conta0.getDigitoVerificador());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Long long0 = new Long((-1L));
      Banco banco0 = new Banco();
      Double double0 = new Double((-1L));
      Conta conta0 = new Conta(long0, "", banco0, double0, (-523), ',');
      conta0.getId();
      assertEquals(',', conta0.getDigitoVerificador());
      assertEquals((-523), conta0.getNumeroConta());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Long long0 = new Long(0L);
      Banco banco0 = new Banco();
      Double double0 = new Double(0L);
      Conta conta0 = new Conta(long0, "z}:83p2MfPc/W[", banco0, double0, 1764, '2');
      char char0 = conta0.getDigitoVerificador();
      assertEquals(1764, conta0.getNumeroConta());
      assertEquals('2', char0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Conta conta0 = new Conta();
      conta0.setDigitoVerificador('B');
      char char0 = conta0.getDigitoVerificador();
      assertEquals('B', char0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Long long0 = new Long(0L);
      Banco banco0 = new Banco("");
      Double double0 = new Double((-1.0));
      Conta conta0 = new Conta(long0, "", banco0, double0, (-2636), 'b');
      conta0.getBeneficiario();
      assertEquals('b', conta0.getDigitoVerificador());
      assertEquals((-2636), conta0.getNumeroConta());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Conta conta0 = new Conta();
      Banco banco0 = new Banco("tSo)E7l");
      conta0.setBanco(banco0);
      conta0.getBanco();
      assertEquals(0.0, conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Conta conta0 = new Conta((Long) null);
      conta0.canEqual(conta0);
      assertEquals(0.0, conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Conta conta0 = new Conta((Long) null);
      Object object0 = new Object();
      conta0.canEqual(object0);
      assertEquals(0.0, conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Conta conta0 = new Conta();
      char char0 = conta0.calculaDigitoVerificador((-1));
      assertEquals('\u0000', char0);
      assertEquals(0.0, conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Long long0 = new Long(0L);
      Banco banco0 = new Banco(", banco=");
      Conta conta0 = new Conta(long0, "E", banco0, (Double) null, 43, '(');
      // Undeclared exception!
      try { 
        conta0.debitar(0L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.example.Conta", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Long long0 = new Long((-664L));
      Banco banco0 = new Banco("+l/Qh~O");
      Conta conta0 = new Conta(long0, "+l/Qh~O", banco0, (Double) null, (-2142283929), 'i');
      // Undeclared exception!
      try { 
        conta0.creditar(0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.example.Conta", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Long long0 = new Long(116L);
      Conta conta0 = new Conta(long0);
      // Undeclared exception!
      try { 
        conta0.calculaDigitoVerificador((-2144820834));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("com.example.Conta", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Conta conta0 = new Conta((Long) null);
      Double double0 = conta0.getSaldo();
      assertEquals(0.0, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Conta conta0 = new Conta();
      conta0.getBeneficiario();
      assertEquals(0.0, conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Conta conta0 = new Conta();
      conta0.getBanco();
      assertEquals(0.0, conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Long long0 = new Long(0L);
      Conta conta0 = new Conta(long0);
      conta0.getId();
      assertEquals(0.0, conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Conta conta0 = new Conta();
      conta0.getDigitoVerificador();
      assertEquals(0.0, conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Conta conta0 = new Conta();
      char char0 = conta0.calculaDigitoVerificador(831);
      assertEquals('X', char0);
      assertEquals(0.0, conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Conta conta0 = new Conta();
      char char0 = conta0.calculaDigitoVerificador(1375);
      assertEquals('4', char0);
      assertEquals(0.0, conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Conta conta0 = new Conta((Long) null);
      Boolean boolean0 = conta0.debitar(59);
      assertFalse(boolean0);
      assertEquals(0.0, conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Long long0 = new Long(0L);
      Conta conta0 = new Conta(long0);
      Boolean boolean0 = conta0.debitar(0.0);
      assertTrue(boolean0);
      assertEquals(0.0, conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Long long0 = new Long(0L);
      Conta conta0 = new Conta(long0);
      Banco banco0 = new Banco();
      conta0.setBanco(banco0);
      Conta conta1 = new Conta(long0);
      boolean boolean0 = conta1.equals(conta0);
      assertEquals(0, conta1.getNumeroConta());
      assertEquals(0.0, conta1.getSaldo(), 0.01);
      assertFalse(conta0.equals((Object)conta1));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Long long0 = new Long(0L);
      Conta conta0 = new Conta(long0);
      assertEquals(0.0, conta0.getSaldo(), 0.01);
      
      Conta conta1 = new Conta(long0);
      conta0.setSaldo(1.0);
      boolean boolean0 = conta1.equals(conta0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Long long0 = new Long(0L);
      Conta conta0 = new Conta(long0);
      Conta conta1 = new Conta();
      boolean boolean0 = conta0.equals(conta1);
      assertEquals(0.0, conta0.getSaldo(), 0.01);
      assertFalse(boolean0);
      assertEquals(0, conta1.getNumeroConta());
      assertEquals(0.0, conta1.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Conta conta0 = new Conta((Long) null);
      Long long0 = new Long((-2290));
      Conta conta1 = new Conta(long0);
      boolean boolean0 = conta0.equals(conta1);
      assertEquals(0.0, conta1.getSaldo(), 0.01);
      assertFalse(boolean0);
      assertFalse(conta1.equals((Object)conta0));
      assertEquals(0, conta1.getNumeroConta());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Long long0 = new Long(0L);
      Conta conta0 = new Conta(long0);
      Conta conta1 = new Conta();
      conta1.setNumeroConta(5157);
      boolean boolean0 = conta0.equals(conta1);
      assertEquals(5157, conta1.getNumeroConta());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Conta conta0 = new Conta((Long) null);
      Object object0 = new Object();
      boolean boolean0 = conta0.equals(object0);
      assertFalse(boolean0);
      assertEquals(0.0, conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Long long0 = new Long(0L);
      Conta conta0 = new Conta(long0);
      conta0.setBeneficiario(", digitoVerificador=");
      Conta conta1 = new Conta(long0);
      boolean boolean0 = conta0.equals(conta1);
      assertFalse(boolean0);
      assertEquals(0, conta1.getNumeroConta());
      assertEquals(0.0, conta1.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Long long0 = new Long((-1260L));
      LinkedList<Conta> linkedList0 = new LinkedList<Conta>();
      Banco banco0 = new Banco(long0, (String) null, linkedList0);
      Conta conta0 = new Conta(long0, "", banco0, (Double) null, 5, 'q');
      conta0.hashCode();
      assertEquals('q', conta0.getDigitoVerificador());
      assertEquals(5, conta0.getNumeroConta());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Long long0 = new Long(0L);
      Conta conta0 = new Conta(long0);
      conta0.hashCode();
      assertEquals(0, conta0.getNumeroConta());
      assertEquals(0.0, conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Conta conta0 = new Conta();
      String string0 = conta0.toString();
      assertEquals("Conta(id=null, beneficiario=null, banco=null, saldo=0.0, numeroConta=0, digitoVerificador=\u0000)", string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Conta conta0 = new Conta((Long) null);
      conta0.setId((Long) null);
      assertEquals(0.0, conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Long long0 = new Long(0L);
      Conta conta0 = new Conta(long0);
      Banco banco0 = new Banco();
      conta0.setBanco(banco0);
      Conta conta1 = new Conta(long0);
      boolean boolean0 = conta0.equals(conta1);
      assertEquals(0.0, conta1.getSaldo(), 0.01);
      assertFalse(boolean0);
      assertEquals(0, conta1.getNumeroConta());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Conta conta0 = new Conta();
      Conta conta1 = new Conta();
      boolean boolean0 = conta0.equals(conta1);
      assertEquals(0, conta1.getNumeroConta());
      assertEquals(0.0, conta1.getSaldo(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Conta conta0 = new Conta();
      conta0.hashCode();
      assertEquals(0, conta0.getNumeroConta());
      assertEquals(0.0, conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Conta conta0 = new Conta();
      conta0.setDigitoVerificador(',');
      Conta conta1 = new Conta();
      boolean boolean0 = conta0.equals(conta1);
      assertEquals(',', conta0.getDigitoVerificador());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Conta conta0 = new Conta((Long) null);
      int int0 = conta0.getNumeroConta();
      assertEquals(0.0, conta0.getSaldo(), 0.01);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Conta conta0 = new Conta((Long) null);
      conta0.setBeneficiario("'t&t*&Pq<XjCW!hc");
      conta0.getBeneficiario();
      assertEquals(0.0, conta0.getSaldo(), 0.01);
  }
}
