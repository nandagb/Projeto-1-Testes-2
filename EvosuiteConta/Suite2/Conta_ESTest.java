/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 15 02:32:04 GMT 2024
 */

package com.example;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.example.Banco;
import com.example.Conta;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Conta_ESTest extends Conta_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Conta conta0 = new Conta();
      Conta conta1 = new Conta();
      conta1.setDigitoVerificador('i');
      boolean boolean0 = conta0.equals(conta1);
      assertEquals('i', conta1.getDigitoVerificador());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Long long0 = new Long((-577L));
      Banco banco0 = new Banco("");
      Double double0 = new Double(0.0);
      Conta conta0 = new Conta(long0, "M+e>fs_QP794B`.", banco0, double0, 59, 'N');
      Conta conta1 = new Conta();
      boolean boolean0 = conta0.equals(conta1);
      assertFalse(boolean0);
      assertEquals(59, conta0.getNumeroConta());
      assertEquals('N', conta0.getDigitoVerificador());
      assertEquals(0.0, conta1.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Conta conta0 = new Conta();
      boolean boolean0 = conta0.equals(conta0);
      assertEquals(0.0, conta0.getSaldo(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Conta conta0 = new Conta();
      assertEquals(0.0, conta0.getSaldo(), 0.01);
      
      conta0.setSaldo(1.0);
      Double double0 = conta0.getSaldo();
      assertEquals(1.0, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Conta conta0 = new Conta();
      assertEquals(0.0, conta0.getSaldo(), 0.01);
      
      conta0.debitar((-1.0));
      conta0.getSaldo();
      assertEquals((-1.0), conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Long long0 = new Long((-577L));
      Banco banco0 = new Banco("");
      Double double0 = new Double(0.0);
      Conta conta0 = new Conta(long0, "M+e>fs_QP794B`.", banco0, double0, 59, 'N');
      int int0 = conta0.getNumeroConta();
      assertEquals('N', conta0.getDigitoVerificador());
      assertEquals(59, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Conta conta0 = new Conta();
      conta0.setNumeroConta((-1946));
      int int0 = conta0.getNumeroConta();
      assertEquals((-1946), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Conta conta0 = new Conta();
      Long long0 = Long.valueOf(0L);
      conta0.setId(long0);
      conta0.getId();
      assertEquals(0.0, conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Long long0 = new Long(371L);
      Banco banco0 = new Banco((String) null);
      Double double0 = new Double(371L);
      Conta conta0 = new Conta(long0, (String) null, banco0, double0, (-1124), 'w');
      conta0.getId();
      assertEquals('w', conta0.getDigitoVerificador());
      assertEquals((-1124), conta0.getNumeroConta());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Long long0 = new Long((-1L));
      Banco banco0 = new Banco("_OZncT<S)");
      Conta conta0 = new Conta(long0, ")", banco0, (Double) null, (-2664), '[');
      conta0.getId();
      assertEquals((-2664), conta0.getNumeroConta());
      assertEquals('[', conta0.getDigitoVerificador());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Conta conta0 = new Conta();
      conta0.setDigitoVerificador('6');
      char char0 = conta0.getDigitoVerificador();
      assertEquals('6', char0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Long long0 = new Long(2156L);
      Banco banco0 = new Banco("com.example.Banco");
      Double double0 = new Double(0.0);
      Conta conta0 = new Conta(long0, "`::qChULd`KgR", banco0, double0, 372, 'R');
      char char0 = conta0.getDigitoVerificador();
      assertEquals('R', char0);
      assertEquals(372, conta0.getNumeroConta());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Conta conta0 = new Conta();
      conta0.setBeneficiario("%[7Z");
      conta0.getBeneficiario();
      assertEquals(0.0, conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Conta conta0 = new Conta();
      conta0.setBeneficiario("");
      conta0.getBeneficiario();
      assertEquals(0.0, conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Conta conta0 = new Conta();
      Banco banco0 = new Banco("Conta(id=");
      conta0.setBanco(banco0);
      conta0.getBanco();
      assertEquals(0.0, conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Long long0 = new Long((-1L));
      Banco banco0 = new Banco("_OZncT<S)");
      Conta conta0 = new Conta(long0, ")", banco0, (Double) null, (-2664), '[');
      conta0.canEqual(conta0);
      assertEquals((-2664), conta0.getNumeroConta());
      assertEquals('[', conta0.getDigitoVerificador());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Conta conta0 = new Conta();
      Integer integer0 = new Integer(0);
      conta0.canEqual(integer0);
      assertEquals(0.0, conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Conta conta0 = new Conta();
      char char0 = conta0.calculaDigitoVerificador((-1));
      assertEquals('\u0000', char0);
      assertEquals(0.0, conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Long long0 = new Long((-1L));
      Banco banco0 = new Banco("_OZncT<S)");
      Conta conta0 = new Conta(long0, ")", banco0, (Double) null, (-2664), '[');
      // Undeclared exception!
      try { 
        conta0.debitar((-2664));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.example.Conta", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Long long0 = new Long(0L);
      Banco banco0 = new Banco(long0, "J4", (List<Conta>) null);
      Conta conta0 = new Conta(long0, "^Ro+a&bNVWWsj91", banco0, (Double) null, 0, '!');
      // Undeclared exception!
      try { 
        conta0.creditar((-1.0));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.example.Conta", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Conta conta0 = new Conta();
      // Undeclared exception!
      try { 
        conta0.calculaDigitoVerificador((-2146474914));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("com.example.Conta", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Conta conta0 = new Conta();
      conta0.getBeneficiario();
      assertEquals(0.0, conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Conta conta0 = new Conta();
      conta0.getBanco();
      assertEquals(0.0, conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Conta conta0 = new Conta();
      conta0.getId();
      assertEquals(0.0, conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Conta conta0 = new Conta();
      conta0.getDigitoVerificador();
      assertEquals(0.0, conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Conta conta0 = new Conta();
      int int0 = conta0.getNumeroConta();
      assertEquals(0, int0);
      assertEquals(0.0, conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Long long0 = new Long((-1L));
      Double double0 = new Double((-1L));
      Conta conta0 = new Conta(long0, "R{ADw7r9=ED#o", (Banco) null, double0, (-3345), '=');
      char char0 = conta0.calculaDigitoVerificador((-3345));
      assertEquals('X', char0);
      assertEquals('=', conta0.getDigitoVerificador());
      assertEquals((-3345), conta0.getNumeroConta());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Conta conta0 = new Conta();
      char char0 = conta0.calculaDigitoVerificador(1);
      assertEquals('2', char0);
      assertEquals(0.0, conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Conta conta0 = new Conta();
      Boolean boolean0 = conta0.debitar(1534.2357);
      assertEquals(0.0, conta0.getSaldo(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Conta conta0 = new Conta();
      Boolean boolean0 = conta0.debitar(0.0);
      assertTrue(boolean0);
      assertEquals(0.0, conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Conta conta0 = new Conta();
      conta0.setBeneficiario("");
      Conta conta1 = new Conta();
      boolean boolean0 = conta0.equals(conta1);
      assertEquals(0.0, conta1.getSaldo(), 0.01);
      assertFalse(boolean0);
      assertEquals(0, conta1.getNumeroConta());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Conta conta0 = new Conta();
      conta0.creditar(175.558068);
      Conta conta1 = new Conta((Long) null);
      boolean boolean0 = conta0.equals(conta1);
      assertEquals(175.558068, conta0.getSaldo(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Conta conta0 = new Conta();
      Double double0 = conta0.getSaldo();
      conta0.setDigitoVerificador('');
      conta0.setNumeroConta((-814));
      Long long0 = new Long(1L);
      Banco banco0 = new Banco(long0, ", banco=", (List<Conta>) null);
      Conta conta1 = new Conta(long0, "jC-;KO", banco0, double0, (-814), '');
      boolean boolean0 = conta0.equals(conta1);
      assertEquals('', conta0.getDigitoVerificador());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Conta conta0 = new Conta();
      Conta conta1 = new Conta();
      conta0.setDigitoVerificador('C');
      boolean boolean0 = conta0.equals(conta1);
      assertEquals('C', conta0.getDigitoVerificador());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Conta conta0 = new Conta();
      boolean boolean0 = conta0.equals("X");
      assertFalse(boolean0);
      assertEquals(0.0, conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Conta conta0 = new Conta();
      conta0.hashCode();
      assertEquals(0.0, conta0.getSaldo(), 0.01);
      assertEquals(0, conta0.getNumeroConta());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Conta conta0 = new Conta();
      Long long0 = new Long(2619);
      conta0.setId(long0);
      conta0.hashCode();
      assertEquals(0, conta0.getNumeroConta());
      assertEquals(0.0, conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Conta conta0 = new Conta();
      String string0 = conta0.toString();
      assertEquals("Conta(id=null, beneficiario=null, banco=null, saldo=0.0, numeroConta=0, digitoVerificador=\u0000)", string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Conta conta0 = new Conta();
      Long long0 = new Long(0L);
      conta0.setId(long0);
      Conta conta1 = new Conta();
      boolean boolean0 = conta0.equals(conta1);
      assertFalse(boolean0);
      assertEquals(0, conta1.getNumeroConta());
      assertEquals(0.0, conta1.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Conta conta0 = new Conta();
      Long long0 = new Long(0L);
      Double double0 = conta0.getSaldo();
      assertEquals(0.0, (double)double0, 0.01);
      
      Conta conta1 = new Conta(long0, "X", (Banco) null, double0, 1, '2');
      boolean boolean0 = conta0.equals(conta1);
      assertFalse(boolean0);
      assertEquals(1, conta1.getNumeroConta());
      assertEquals('2', conta1.getDigitoVerificador());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Conta conta0 = new Conta();
      Banco banco0 = new Banco("Conta(id=");
      conta0.setBanco(banco0);
      conta0.hashCode();
      assertEquals(0, conta0.getNumeroConta());
      assertEquals(0.0, conta0.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Conta conta0 = new Conta();
      conta0.setNumeroConta(2146400701);
      conta0.hashCode();
      assertEquals(2146400701, conta0.getNumeroConta());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Conta conta0 = new Conta();
      conta0.setDigitoVerificador('C');
      conta0.hashCode();
      assertEquals('C', conta0.getDigitoVerificador());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Conta conta0 = new Conta();
      Conta conta1 = new Conta();
      boolean boolean0 = conta0.equals(conta1);
      assertEquals(0, conta1.getNumeroConta());
      assertTrue(boolean0);
      assertEquals(0.0, conta1.getSaldo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Conta conta0 = new Conta();
      conta0.setBeneficiario("O!m\f+y}X9m");
      conta0.hashCode();
      assertEquals(0, conta0.getNumeroConta());
  }
}
